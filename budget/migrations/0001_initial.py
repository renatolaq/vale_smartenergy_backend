# Generated by Django 2.1.11 on 2020-02-11 13:45

import budget.models.CompanyBudget
import budget.models.CompanyBudgetRevision
from django.db import migrations, models
import enumchoicefield.fields
import separatedvaluesfield.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Budget',
            fields=[
                ('id', models.BigAutoField(db_column='ID_COMPANY_BUDGET_DATA', primary_key=True, serialize=False)),
                ('contracted_peak_power_demand', models.FloatField(blank=True, db_column='CONT_PEAK_PW_DEMAND', null=True)),
                ('contracted_offpeak_power_demand', models.FloatField(blank=True, db_column='CONT_OFFPEAK_PW_DEMAND', null=True)),
                ('estimated_peak_power_demand', models.FloatField(blank=True, db_column='EST_PEAK_PW_DEMAND', null=True)),
                ('estimated_offpeak_power_demand', models.FloatField(blank=True, db_column='EST_OFFPEAK_PW_DEMAND', null=True)),
                ('consumption_peak_power_demand', models.FloatField(blank=True, db_column='CONS_PEAK_PW_DEMAND', null=True)),
                ('consumption_offpeak_power_demand', models.FloatField(blank=True, db_column='CONS_OFFPEAK_PW_DEMAND', null=True)),
                ('production', models.FloatField(blank=True, db_column='PRODUCTION', null=True)),
                ('productive_stops', models.FloatField(blank=True, db_column='PRODUCTIVE_STOPS', null=True)),
                ('total_consumption', models.FloatField(blank=True, db_column='TOTAL_CONSUMPTION', null=True)),
                ('utilization_factor_consistency_offpeakpower', models.FloatField(blank=True, db_column='UTIL_FAC_CONS_OFPEAK_PW', null=True)),
                ('utilization_factor_consistency_peakpower', models.FloatField(blank=True, db_column='UTIL_FAC_CONS_PEAK_PW', null=True)),
                ('loadfactor_consistency_offpeakpower', models.FloatField(blank=True, db_column='LOAD_FAC_CONS_OFPEAK_PW', null=True)),
                ('loadfactor_consistency_peakpower', models.FloatField(blank=True, db_column='LOAD_FAC_CONS_PEAK_PW', null=True)),
                ('uniqueload_factor_consistency', models.FloatField(blank=True, db_column='UNIQUE_LOAD_FAC_CONS', null=True)),
                ('modulation_factor_consistency', models.FloatField(blank=True, db_column='MODULATION_FAC_CONS', null=True)),
                ('specific_consumption', models.FloatField(blank=True, db_column='SPECIFIC_CONSUMPTION', null=True)),
                ('contracted_peak_power_demand_alerts', separatedvaluesfield.models.SeparatedValuesField(blank=True, db_column='CONT_PEAK_PW_DEMAND_ALERTS', max_length=400, null=True)),
                ('contracted_offpeak_power_demand_alerts', separatedvaluesfield.models.SeparatedValuesField(blank=True, db_column='CONT_OFFPEAK_PW_DEMAND_ALERTS', max_length=400, null=True)),
                ('estimated_peak_power_demand_alerts', separatedvaluesfield.models.SeparatedValuesField(blank=True, db_column='EST_PEAK_PW_DEMAND_ALERTS', max_length=400, null=True)),
                ('estimated_offpeak_power_demand_alerts', separatedvaluesfield.models.SeparatedValuesField(blank=True, db_column='EST_OFFPEAK_PW_DEMAND_ALERTS', max_length=400, null=True)),
                ('consumption_peak_power_demand_alerts', separatedvaluesfield.models.SeparatedValuesField(blank=True, db_column='CONS_PEAK_PW_DEMAND_ALERTS', max_length=400, null=True)),
                ('consumption_offpeak_power_demand_alerts', separatedvaluesfield.models.SeparatedValuesField(blank=True, db_column='CONS_OFFPEAK_PW_DEMAND_ALERTS', max_length=400, null=True)),
                ('production_alerts', separatedvaluesfield.models.SeparatedValuesField(blank=True, db_column='PRODUCTION_ALERTS', max_length=400, null=True)),
                ('productive_stops_alerts', separatedvaluesfield.models.SeparatedValuesField(blank=True, db_column='PRODUCTIVE_STOPS_ALERTS', max_length=400, null=True)),
                ('total_consumption_alerts', separatedvaluesfield.models.SeparatedValuesField(blank=True, db_column='TOTAL_CONSUMPTION_ALERTS', max_length=400, null=True)),
                ('utilization_factor_consistency_offpeakpower_alerts', separatedvaluesfield.models.SeparatedValuesField(blank=True, db_column='UTIL_FAC_CONS_OFPEAK_PW_ALERTS', max_length=400, null=True)),
                ('utilization_factor_consistency_peakpower_alerts', separatedvaluesfield.models.SeparatedValuesField(blank=True, db_column='UTIL_FAC_CONS_PEAK_PW_ALERTS', max_length=400, null=True)),
                ('loadfactor_consistency_offpeakpower_alerts', separatedvaluesfield.models.SeparatedValuesField(blank=True, db_column='LOAD_FAC_CONS_OFPEAK_PW_ALERTS', max_length=400, null=True)),
                ('loadfactor_consistency_peakpower_alerts', separatedvaluesfield.models.SeparatedValuesField(blank=True, db_column='LOAD_FAC_CONS_PEAK_PW_ALERTS', max_length=400, null=True)),
                ('uniqueload_factor_consistency_alerts', separatedvaluesfield.models.SeparatedValuesField(blank=True, db_column='UNIQUE_LOAD_FAC_CONS_ALERTS', max_length=400, null=True)),
                ('modulation_factor_consistency_alerts', separatedvaluesfield.models.SeparatedValuesField(blank=True, db_column='MODULATION_FAC_CONS_ALERTS', max_length=400, null=True)),
                ('specific_consumption_alerts', separatedvaluesfield.models.SeparatedValuesField(blank=True, db_column='SPECIFIC_CONSUMPTION_ALERTS', max_length=400, null=True)),
            ],
            options={
                'db_table': 'COMPANY_BUDGET_DATA',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BudgetChangeTrack',
            fields=[
                ('id', models.BigAutoField(db_column='ID_COMPANY_BUDGET_CHANGE_TRACK', primary_key=True, serialize=False)),
                ('budget_revision', models.SmallIntegerField(blank=True, db_column='BUDGET_REVISION', null=True)),
                ('comment', models.CharField(blank=True, db_column='COMMENT', max_length=400, null=True)),
                ('user', models.CharField(blank=True, db_column='USER', max_length=50, null=True)),
                ('change_at', models.DateTimeField(blank=True, db_column='CHANGE_AT', null=True)),
                ('state', enumchoicefield.fields.EnumChoiceField(db_column='STATE', enum_class=budget.models.CompanyBudgetRevision.CompanyBudgetRevisionState, max_length=39)),
            ],
            options={
                'db_table': 'COMPANY_BUDGET_CHANGE_TRACK',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CompanyBudget',
            fields=[
                ('id', models.BigAutoField(db_column='ID_COMPANY_BUDGET', primary_key=True, serialize=False)),
                ('year', models.SmallIntegerField(db_column='YEAR')),
                ('company_id', models.BigIntegerField(db_column='ID_COMPANY')),
                ('calculation_mode', enumchoicefield.fields.EnumChoiceField(db_column='CALCULATION_MODE', enum_class=budget.models.CompanyBudget.CompanyBudgetCalculationMode, max_length=7)),
            ],
            options={
                'db_table': 'COMPANY_BUDGET',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CompanyBudgetRevision',
            fields=[
                ('id', models.BigAutoField(db_column='ID_COMPANY_BUDGET_REVISION', primary_key=True, serialize=False)),
                ('revision', models.IntegerField(db_column='REVISION')),
                ('state', enumchoicefield.fields.EnumChoiceField(db_column='STATE', enum_class=budget.models.CompanyBudgetRevision.CompanyBudgetRevisionState, max_length=39)),
                ('consumption_limit', models.FloatField(blank=True, db_column='CONSUMPTION_LIMIT', null=True)),
            ],
            options={
                'db_table': 'COMPANY_BUDGET_REVISION',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MonthlyBudget',
            fields=[
                ('id', models.BigAutoField(db_column='ID_COMPANY_BUDGET_MONTHLY', primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'COMPANY_BUDGET_MONTHLY',
                'managed': False,
            },
        ),
    ]
