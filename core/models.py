# Get models copy + paste from models_import
# It's a transient file generated by command $> python manage.py inspectdb > .\core\models_import.py
# This is an auto-generated Django model module.
# You'll have to do the following manually to clean this up:
#   * Rearrange models' order
#   * Make sure each model has one field with primary_key=True
#   * Make sure each ForeignKey has `on_delete` set to the desired behavior.
#   * Remove `managed = False` lines if you wish to allow Django to create, modify, and delete the table
# Feel free to rename the models, but don't rename db_table values or field names.
from django.db import models
from energy_composition.models import EnergyComposition


class CceeDescription(models.Model):
    id_ccee = models.AutoField(db_column='ID_CCEE', primary_key=True)  # Field name made lowercase.
    code_ccee = models.CharField(db_column='CODE_CCEE', max_length=40, blank=True)  # Field name made lowercase.
    type = models.CharField(db_column='TYPE', max_length=40)  # Field name made lowercase.
    name_ccee = models.CharField(db_column='NAME_CCEE', max_length=30, blank=True,
                                 null=True)  # Field name made lowercase.
    status = models.CharField(db_column='STATUS', max_length=1)  # Field name made lowercase.

    class Meta:
        managed = False
        db_table = 'CCEE_DESCRIPTION'


class Log(models.Model):
    id_log = models.AutoField(db_column='ID_LOG', primary_key=True)  # Field name made lowercase.
    field_pk = models.DecimalField(db_column='FIELD_PK', max_digits=9, decimal_places=0, blank=True,
                                   null=True)  # Field name made lowercase.
    table_name = models.CharField(db_column='TABLE_NAME', max_length=128, blank=True,
                                  null=True)  # Field name made lowercase.
    action_type = models.CharField(db_column='ACTION_TYPE', max_length=30, blank=True,
                                   null=True)  # Field name made lowercase.
    old_value = models.TextField(db_column='OLD_VALUE', blank=True, null=True)  # Field name made lowercase.
    new_value = models.TextField(db_column='NEW_VALUE', blank=True, null=True)  # Field name made lowercase.
    observation = models.TextField(db_column='OBSERVATION', blank=True, null=True)  # Field name made lowercase.
    date = models.DateTimeField(db_column='DATE', blank=True, null=True)  # Field name made lowercase.
    user = models.TextField(db_column='USER', blank=True, null=True)  # Field name made lowercase.

    class Meta:
        managed = False
        db_table = 'LOG'

class Seasonality(models.Model):
    id_seasonality = models.AutoField(db_column='ID_SEASONALITY', primary_key=True)  # Field name made lowercase.
    year = models.DecimalField(db_column='YEAR', max_digits=4, decimal_places=0)  # Field name made lowercase.
    measure_unity = models.CharField(db_column='MEASURE_UNITY', max_length=3)  # Field name made lowercase.
    january = models.DecimalField(db_column='JANUARY', max_digits=18, decimal_places=9, blank=True,
                                  null=True)  # Field name made lowercase.
    february = models.DecimalField(db_column='FEBRUARY', max_digits=18, decimal_places=9, blank=True,
                                   null=True)  # Field name made lowercase.
    march = models.DecimalField(db_column='MARCH', max_digits=18, decimal_places=9, blank=True,
                                null=True)  # Field name made lowercase.
    april = models.DecimalField(db_column='APRIL', max_digits=18, decimal_places=9, blank=True,
                                null=True)  # Field name made lowercase.
    may = models.DecimalField(db_column='MAY', max_digits=18, decimal_places=9, blank=True,
                              null=True)  # Field name made lowercase.
    june = models.DecimalField(db_column='JUNE', max_digits=18, decimal_places=9, blank=True,
                               null=True)  # Field name made lowercase.
    july = models.DecimalField(db_column='JULY', max_digits=18, decimal_places=9, blank=True,
                               null=True)  # Field name made lowercase.
    august = models.DecimalField(db_column='AUGUST', max_digits=18, decimal_places=9, blank=True,
                                 null=True)  # Field name made lowercase.
    september = models.DecimalField(db_column='SEPTEMBER', max_digits=18, decimal_places=9, blank=True,
                                    null=True)  # Field name made lowercase.
    october = models.DecimalField(db_column='OCTOBER', max_digits=18, decimal_places=9, blank=True,
                                  null=True)  # Field name made lowercase.
    november = models.DecimalField(db_column='NOVEMBER', max_digits=18, decimal_places=9, blank=True,
                                   null=True)  # Field name made lowercase.
    december = models.DecimalField(db_column='DECEMBER', max_digits=18, decimal_places=9, blank=True,
                                   null=True)  # Field name made lowercase.

    class Meta:
        managed = False
        db_table = 'seasonality'


class Measurements(models.Model):
    unity = models.CharField(db_column='UNITY', max_length=8, blank=True, null=True)
    frequency = models.CharField(db_column='FREQUENCY', max_length=30, blank=True, null=True)
    measurement_name = models.CharField(db_column='MEASUREMENT_NAME', max_length=400, blank=True, null=True)
    pme_measure_name = models.CharField(db_column='PME_MEASURE_NAME', max_length=300, blank=True, null=True)
    code_reference = models.CharField(db_column='CODE_REFERENCE', max_length=30, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'MEASUREMENTS'


class KpiVirtualMeter(models.Model):
    id_kpi_virtual_meter = models.AutoField(db_column='ID_KPI_VIRTUAL_METER', primary_key=True)
    source_id = models.CharField(db_column='SOURCE_ID', max_length=200)
    quantity_id = models.CharField(db_column='QUANTITY_ID', max_length=200)
    label = models.CharField(db_column='LABEL', max_length=1)
    kpi_source = models.CharField(db_column='KPI_SOURCE', max_length=200)
    kpi_quantity = models.CharField(db_column='KPI_QUANTITY', max_length=200)
    formula = models.CharField(db_column='FORMULA', max_length=200)
    type = models.IntegerField(db_column='TYPE')
    utc_creation = models.DateTimeField(db_column='UTC_CREATION')
    id_energy_composition = models.ForeignKey(EnergyComposition, models.DO_NOTHING, db_column='ID_ENERGY_COMPOSITION')

    class Meta:
        managed = False
        db_table = 'KPI_VIRTUAL_METER'