# Generated by Django 2.1.11 on 2020-02-11 13:45

from django.db import migrations, models
import enumchoicefield.fields
import plan_monitoring.models.CompanyPlanMonitoring
import plan_monitoring.models.PlanMonitoringChangeTrack
import separatedvaluesfield.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='CompanyPlanMonitoring',
            fields=[
                ('id', models.BigAutoField(db_column='ID_COMPANY_PLAN_MONITORING', primary_key=True, serialize=False)),
                ('year', models.SmallIntegerField(db_column='YEAR')),
                ('company_id', models.BigIntegerField(db_column='ID_COMPANY')),
                ('has_open_justification', models.BooleanField(db_column='HAS_OPEN_JUSTIFICATION')),
                ('calculation_mode', enumchoicefield.fields.EnumChoiceField(db_column='CALCULATION_MODE', enum_class=plan_monitoring.models.CompanyPlanMonitoring.CompanyPlanMonitoringCalculationMode, max_length=7)),
            ],
            options={
                'db_table': 'COMPANY_PLAN_MONITORING',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CompanyPlanMonitoringRevision',
            fields=[
                ('id', models.BigAutoField(db_column='ID_COMPANY_PLAN_MONITORING_REV', primary_key=True, serialize=False)),
                ('revision', models.IntegerField(db_column='REVISION')),
            ],
            options={
                'db_table': 'COMPANY_PLAN_MONITORING_REVISION',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MonthlyPlanMonitoring',
            fields=[
                ('id', models.BigAutoField(db_column='ID_COMPANY_PLAN_MON_MONTHLY', primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'COMPANY_PLAN_MONITORING_MONTHLY',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PlanMonitoring',
            fields=[
                ('id', models.BigAutoField(db_column='ID_COMPANY_PLAN_MONITORING_DAT', primary_key=True, serialize=False)),
                ('contracted_peak_power_demand', models.FloatField(blank=True, db_column='CONT_PEAK_PW_DEMAND', null=True)),
                ('contracted_offpeak_power_demand', models.FloatField(blank=True, db_column='CONT_OFFPEAK_PW_DEMAND', null=True)),
                ('realized_peakpower_demand', models.FloatField(blank=True, db_column='REA_PEAK_PW_DEMAND', null=True)),
                ('realized_offpeak_power_demand', models.FloatField(blank=True, db_column='REA_OFFPEAK_PW_DEMAND', null=True)),
                ('estimated_peakpower_demand', models.FloatField(blank=True, db_column='EST_PEAK_PW_DEMAND', null=True)),
                ('estimated_offpeak_power_demand', models.FloatField(blank=True, db_column='EST_OFFPEAK_PW_DEMAND', null=True)),
                ('projected_peakpower_demand', models.FloatField(blank=True, db_column='PRO_PEAK_PW_DEMAND', null=True)),
                ('projected_offpeak_power_demand', models.FloatField(blank=True, db_column='PRO_OFFPEAK_PW_DEMAND', null=True)),
                ('projected_peak_power_consumption', models.FloatField(blank=True, db_column='PRO_PEAK_PW_CONS', null=True)),
                ('projected_offpeak_power_consumption', models.FloatField(blank=True, db_column='PRO_OFFPEAK_PW_CONS', null=True)),
                ('realized_peak_power_consumption', models.FloatField(blank=True, db_column='REA_PEAK_PW_CONS', null=True)),
                ('realized_offpeak_power_consumption', models.FloatField(blank=True, db_column='REA_OFFPEAK_PW_CONS', null=True)),
                ('estimated_peak_power_consumption', models.FloatField(blank=True, db_column='EST_PEAK_PW_CONS', null=True)),
                ('estimated_offpeak_power_consumption', models.FloatField(blank=True, db_column='EST_OFFPEAK_PW_CONS', null=True)),
                ('estimated_production', models.FloatField(blank=True, db_column='ESTIMATED_PRODUCTION', null=True)),
                ('realized_production', models.FloatField(blank=True, db_column='REALIZED_PRODUCTION', null=True)),
                ('projected_production', models.FloatField(blank=True, db_column='PROJECTED_PRODUCTION', null=True)),
                ('estimated_productive_stops', models.FloatField(blank=True, db_column='EST_PRODUCTIVE_STOPS', null=True)),
                ('projected_productive_stops', models.FloatField(blank=True, db_column='PRO_PRODUCTIVE_STOPS', null=True)),
                ('estimated_total_consumption', models.FloatField(blank=True, db_column='EST_TOTAL_CONS', null=True)),
                ('realized_total_consumption', models.FloatField(blank=True, db_column='REA_TOTAL_CONS', null=True)),
                ('projected_total_consumption', models.FloatField(blank=True, db_column='PRO_TOTAL_CONS', null=True)),
                ('variation_consumption_estimated_realized', models.FloatField(blank=True, db_column='VAR_CONS_EST_REA', null=True)),
                ('variation_consumption_estimated_projected', models.FloatField(blank=True, db_column='VAR_CONS_EST_PRO', null=True)),
                ('realized_utilization_factor_consistency_offpeakpower', models.FloatField(blank=True, db_column='REA_UT_FAC_CONS_OFFP_PW', null=True)),
                ('realized_utilization_factor_consistency_peakpower', models.FloatField(blank=True, db_column='REA_UTIL_FAC_CONS_P_PW', null=True)),
                ('realized_load_factor_consistency_offpeakpower', models.FloatField(blank=True, db_column='REA_LD_FAC_CONS_OFFP_PW', null=True)),
                ('realized_load_factor_consistency_peakpower', models.FloatField(blank=True, db_column='REA_LD_FAC_CONS_PEAK_PW', null=True)),
                ('realized_uniqueload_factor_consistency', models.FloatField(blank=True, db_column='REA_UNI_LD_FAC_CONS', null=True)),
                ('realized_modulation_factor_consistency', models.FloatField(blank=True, db_column='REA_MODULATION_FAC_CONS', null=True)),
                ('estimated_specific_consumption', models.FloatField(blank=True, db_column='EST_SPEC_CONS', null=True)),
                ('realized_specific_consumption', models.FloatField(blank=True, db_column='REA_SPEC_CONS', null=True)),
                ('projected_specific_consumption', models.FloatField(blank=True, db_column='PRO_SPEC_CONS', null=True)),
                ('variation_specific_consumption_estimated_realized', models.FloatField(blank=True, db_column='VAR_SPEC_CONS_EST_REA', null=True)),
                ('variation_specific_consumption_estimated_projected', models.FloatField(blank=True, db_column='VAR_SPEC_CONS_EST_PRO', null=True)),
                ('contracted_peak_power_demand_alerts', separatedvaluesfield.models.SeparatedValuesField(blank=True, db_column='CONT_PEAK_PW_DEMAND_ALERTS', max_length=400, null=True)),
                ('contracted_offpeak_power_demand_alerts', separatedvaluesfield.models.SeparatedValuesField(blank=True, db_column='CONT_OFFPEAK_PW_DEMAND_ALERTS', max_length=400, null=True)),
                ('realized_peakpower_demand_alerts', separatedvaluesfield.models.SeparatedValuesField(blank=True, db_column='REA_PEAK_PW_DEMAND_ALERTS', max_length=400, null=True)),
                ('realized_offpeak_power_demand_alerts', separatedvaluesfield.models.SeparatedValuesField(blank=True, db_column='REA_OFFPEAK_PW_DEMAND_ALERTS', max_length=400, null=True)),
                ('estimated_peakpower_demand_alerts', separatedvaluesfield.models.SeparatedValuesField(blank=True, db_column='EST_PEAK_PW_DEMAND_ALERTS', max_length=400, null=True)),
                ('estimated_offpeak_power_demand_alerts', separatedvaluesfield.models.SeparatedValuesField(blank=True, db_column='EST_OFFPEAK_PW_DEMAND_ALERTS', max_length=400, null=True)),
                ('projected_peakpower_demand_alerts', separatedvaluesfield.models.SeparatedValuesField(blank=True, db_column='PRO_PEAK_PW_DEMAND_ALERTS', max_length=400, null=True)),
                ('projected_offpeak_power_demand_alerts', separatedvaluesfield.models.SeparatedValuesField(blank=True, db_column='PRO_OFFPEAK_PW_DEMAND_ALERTS', max_length=400, null=True)),
                ('projected_peak_power_consumption_alerts', separatedvaluesfield.models.SeparatedValuesField(blank=True, db_column='PRO_PEAK_PW_CONS_ALERTS', max_length=400, null=True)),
                ('projected_offpeak_power_consumption_alerts', separatedvaluesfield.models.SeparatedValuesField(blank=True, db_column='PRO_OFFPEAK_PW_CONS_ALERTS', max_length=400, null=True)),
                ('realized_peak_power_consumption_alerts', separatedvaluesfield.models.SeparatedValuesField(blank=True, db_column='REA_PEAK_PW_CONS_ALERTS', max_length=400, null=True)),
                ('realized_offpeak_power_consumption_alerts', separatedvaluesfield.models.SeparatedValuesField(blank=True, db_column='REA_OFFPEAK_PW_CONS_ALERTS', max_length=400, null=True)),
                ('estimated_peak_power_consumption_alerts', separatedvaluesfield.models.SeparatedValuesField(blank=True, db_column='EST_PEAK_PW_CONS_ALERTS', max_length=400, null=True)),
                ('estimated_offpeak_power_consumption_alerts', separatedvaluesfield.models.SeparatedValuesField(blank=True, db_column='EST_OFFPEAK_PW_CONS_ALERTS', max_length=400, null=True)),
                ('estimated_production_alerts', separatedvaluesfield.models.SeparatedValuesField(blank=True, db_column='ESTIMATED_PRODUCTION_ALERTS', max_length=400, null=True)),
                ('realized_production_alerts', separatedvaluesfield.models.SeparatedValuesField(blank=True, db_column='REALIZED_PRODUCTION_ALERTS', max_length=400, null=True)),
                ('projected_production_alerts', separatedvaluesfield.models.SeparatedValuesField(blank=True, db_column='PROJECTED_PRODUCTION_ALERTS', max_length=400, null=True)),
                ('estimated_productive_stops_alerts', separatedvaluesfield.models.SeparatedValuesField(blank=True, db_column='EST_PRODUCTIVE_STOPS_ALERTS', max_length=400, null=True)),
                ('projected_productive_stops_alerts', separatedvaluesfield.models.SeparatedValuesField(blank=True, db_column='PRO_PRODUCTIVE_STOPS_ALERTS', max_length=400, null=True)),
                ('estimated_total_consumption_alerts', separatedvaluesfield.models.SeparatedValuesField(blank=True, db_column='EST_TOTAL_CONS_ALERTS', max_length=400, null=True)),
                ('realized_total_consumption_alerts', separatedvaluesfield.models.SeparatedValuesField(blank=True, db_column='REA_TOTAL_CONS_ALERTS', max_length=400, null=True)),
                ('projected_total_consumption_alerts', separatedvaluesfield.models.SeparatedValuesField(blank=True, db_column='PRO_TOTAL_CONS_ALERTS', max_length=400, null=True)),
                ('variation_consumption_estimated_realized_alerts', separatedvaluesfield.models.SeparatedValuesField(blank=True, db_column='VAR_CONS_EST_REA_ALERTS', max_length=400, null=True)),
                ('variation_consumption_estimated_projected_alerts', separatedvaluesfield.models.SeparatedValuesField(blank=True, db_column='VAR_CONS_EST_PRO_ALERTS', max_length=400, null=True)),
                ('realized_utilization_factor_consistency_offpeakpower_alerts', separatedvaluesfield.models.SeparatedValuesField(blank=True, db_column='REA_UT_FAC_CONS_OFFP_PW_ALERTS', max_length=400, null=True)),
                ('realized_utilization_factor_consistency_peakpower_alerts', separatedvaluesfield.models.SeparatedValuesField(blank=True, db_column='REA_UTIL_FAC_CONS_P_PW_ALERTS', max_length=400, null=True)),
                ('realized_load_factor_consistency_offpeakpower_alerts', separatedvaluesfield.models.SeparatedValuesField(blank=True, db_column='REA_LD_FAC_CONS_OFFP_PW_ALERTS', max_length=400, null=True)),
                ('realized_load_factor_consistency_peakpower_alerts', separatedvaluesfield.models.SeparatedValuesField(blank=True, db_column='REA_LD_FAC_CONS_PEAK_PW_ALERTS', max_length=400, null=True)),
                ('realized_uniqueload_factor_consistency_alerts', separatedvaluesfield.models.SeparatedValuesField(blank=True, db_column='REA_UNI_LD_FAC_CONS_ALERTS', max_length=400, null=True)),
                ('realized_modulation_factor_consistency_alerts', separatedvaluesfield.models.SeparatedValuesField(blank=True, db_column='REA_MODULATION_FAC_CONS_ALERTS', max_length=400, null=True)),
                ('estimated_specific_consumption_alerts', separatedvaluesfield.models.SeparatedValuesField(blank=True, db_column='EST_SPEC_CONS_ALERTS', max_length=400, null=True)),
                ('realized_specific_consumption_alerts', separatedvaluesfield.models.SeparatedValuesField(blank=True, db_column='REA_SPEC_CONS_ALERTS', max_length=400, null=True)),
                ('projected_specific_consumption_alerts', separatedvaluesfield.models.SeparatedValuesField(blank=True, db_column='PRO_SPEC_CONS_ALERTS', max_length=400, null=True)),
                ('variation_specific_consumption_estimated_realized_alerts', separatedvaluesfield.models.SeparatedValuesField(blank=True, db_column='VAR_SPEC_CONS_EST_REA_ALERTS', max_length=400, null=True)),
                ('variation_specific_consumption_estimated_projected_alerts', separatedvaluesfield.models.SeparatedValuesField(blank=True, db_column='VAR_SPEC_CONS_EST_PRO_ALERTS', max_length=400, null=True)),
            ],
            options={
                'db_table': 'COMPANY_PLAN_MONITORING_DATA',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PlanMonitoringChangeTrack',
            fields=[
                ('id', models.BigAutoField(db_column='ID_PLAN_MON_CHANGE_TRACK', primary_key=True, serialize=False)),
                ('plan_monitoring_revision', models.SmallIntegerField(blank=True, db_column='PLANMONITORINGREVISION', null=True)),
                ('comment', models.CharField(blank=True, db_column='COMMENT', max_length=400, null=True)),
                ('user', models.CharField(blank=True, db_column='USER', max_length=50, null=True)),
                ('change_at', models.DateTimeField(blank=True, db_column='CHANGE_AT', null=True)),
                ('action', enumchoicefield.fields.EnumChoiceField(blank=True, db_column='ACTION', enum_class=plan_monitoring.models.PlanMonitoringChangeTrack.CompanyPlanMonitoringChangeAction, max_length=20, null=True)),
            ],
            options={
                'db_table': 'COMPANY_PLAN_MONITORING_CHANGE_TRACK',
                'managed': False,
            },
        ),
    ]
